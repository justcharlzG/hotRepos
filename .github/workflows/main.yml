name: Fetch and Update Hot Repos

on:
  schedule:
    - cron: "0 0 * * *"  # 每天 UTC 0:00 触发
  workflow_dispatch:  # 允许手动触发
  push:
    branches:
      - master  # 如果有推送到 master 分支，也会触发

permissions:
  contents: write  # 允许修改内容

jobs:
  fetch_and_update_hot_repos:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          persist-credentials: true 
          fetch-depth: 1  # 只拉取最新的提交

      # Step 2: Fetch hot repositories from GitHub API
      - name: Fetch Hot Repos
        run: |
          # 使用 GitHub Search API 获取按 stars 排序的热门仓库，且最近更新
          curl "https://api.github.com/search/repositories?q=stars:>10000&sort=updated&order=desc&per_page=10" > hot_repos.json

      # Step 3: Extract and format popular repositories list as Markdown
      - name: Format Popular Repos List
        run: |
          jq -r '.items[] | "- [\(.name)](\(.html_url)) - ⭐ \(.stargazers_count) stars - 🕒 \(.updated_at) updated" ' hot_repos.json > readme.md

      # Step 4: Set up Git configuration
      - name: Setup Git Configuration
        run: |
          git config user.email "justcharlzg@outlook.com"
          git config user.name "justcharlzG"

      # Step 5: Prepare Commit
      - name: Prepare Commit
        run: |
          commit_messages=("Update Hot Repos: 🔥" "Refresh Hot Repos List: 🌐" "Top Repos Update: 📊")
          random_msg=${commit_messages[$RANDOM % ${#commit_messages[@]}]}

          git add readme.md

          if git diff --staged --quiet; then
            echo "No changes to commit."
            exit 0
          else
            git commit -m "$random_msg"
          fi

      # Step 6: Push Changes to a new branch
      - name: Push Changes
        if: success()  # 仅在 commit 成功时推送
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}